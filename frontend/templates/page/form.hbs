<template>
  <a-{{lowerCase form}}
    {{#equal form 'Model'}}
    :align-center="false"
    {{else}}
    :width="480"
    {{/equal}}
    :mask-closable="false"
    v-model:visible="visible"
    :ok-loading="loading"
    :on-before-ok="handleOk"
    @cancel="handleCancel"
  >
    <template #title> \{{ title }} </template>
    <a-form :model="form" ref="formRef"> </a-form>
  </a-{{lowerCase form}}>
</template>

<script setup>
import { Message } from '@arco-design/web-vue'
import { reactive, ref, toRaw } from 'vue'
import { add{{titleCase module}}, edit{{titleCase module}} } from '@/api/modules/{{module}}'

// 表单校验示例
const validatorRules = {
  {{module}}Name: {
    rules: [{ required: true, message: '请填写{{chinese}}名称!' }],
    trigger: ['change', 'input']
  }
}

const emits = defineEmits(['submit'])

const title = ref('弹窗标题')
const visible = ref(false)
const loading = ref(false)
const formRef = ref(null)
const {{module}}Id = ref(null)
const form = reactive({
  // 定义需要填写的字段
})

const handleOk = async () => {
  let flag = false
  await formRef.value.validate((error) => {
    if (!error) {
      flag = true
    }
  })

  if (flag) {
    loading.value = true
    let result
    if ({{module}}Id.value) {
      result = edit{{titleCase module}}({ id: {{module}}Id.value, ...toRaw(form) })
    } else {
      result = add{{titleCase module}}(toRaw(form))
    }
    await result
      .then((res) => {
        const { statusCode, message } = res
        if (statusCode === 200) {
          Message.success(message)
          emits('submit', {{module}}Id.value ? undefined : 1)
          handleCancel()
        } else {
          throw message
        }
      })
      .catch((error) => {
        Message.warning(`操作失败，${error}`)
      })
      .finally(() => {
        loading.value = false
      })
  }
  return flag
}
const handleCancel = () => {
  {{module}}Id.value = null
  formRef.value.resetFields()
}

const onShow = () => {
  visible.value = true
}
const onEdit = (record) => {
  onShow()
  {{module}}Id.value = record._id
}

defineExpose({
  title,
  onShow,
  onEdit
})
</script>

<style scoped lang="less"></style>
